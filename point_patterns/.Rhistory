theme(legend.position="none")
PxAR <- ggplot(data = data.frame(A, Px), aes(x = A, y = Px)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "(b)") +
theme_classic()  +
theme(legend.position="none")
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "(c)") +
theme_classic() +
theme(legend.position="none")
grid.arrange(SAR, PxAR, ExAR, nrow = 1)
PxAR <- ggplot(data = data.frame(A, Px), aes(x = A, y = Px)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "(b)") +
theme_classic()  +
theme(legend.position="none")
ggplot(data = data.frame(A, Px), aes(x = A, y = Px)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "(b)") +
theme_classic()  +
theme(legend.position="none")
PxAR <- ggplot(data = data.frame(A, Px), aes(x = A, y = Px)) +
geom_line() +
scale_x_continuous(trans='log10') +
labs(title = "(b)") +
theme_classic()  +
theme(legend.position="none")
A = 1:100
z1 = 0.2
z2 = 0.1
z3 = 0.3
exz = -0.1
c=3
S1 = c*A^z1
S2 = c*A^z2
S3 = c*A^z3
# CURVE 1 - shallow power law
Px = (c*A^exz)/max(c*A^exz)*0.5
Ex1 = S1*Px
Ex2 = S2*Px
Ex3 = S3*Px
dat <- data.frame(A = rep(A, times = 3),
S = c(S1, S2, S3),
Px = rep(Px, times = 3),
Ex = c(Ex1, Ex2, Ex3),
scenario = rep(c("i","ii","iii"), each = length(A)))
SAR <- ggplot(data = dat, aes(x = A, y = S)) +
geom_line(aes(linetype = scenario)) +
labs(title = "(a)") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()  +
theme(legend.position="none")
PxAR <- ggplot(data = data.frame(A, Px), aes(x = A, y = Px)) +
geom_line() +
scale_x_continuous(trans='log10') +
labs(title = "(b)") +
theme_classic()  +
theme(legend.position="none")
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "(c)") +
theme_classic() +
theme(legend.position="none")
grid.arrange(SAR, PxAR, ExAR, nrow = 1)
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "ExAR") +
ylab(expression(E[x]=SP[x])) +
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "ExAR") +
ylab(expression(E[x]==SP[x])) +
theme_classic() +
theme(legend.position="none")
grid.arrange(SAR, PxAR, ExAR, nrow = 1)
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "ExAR") +
ylab(expression(E[x]==P[x]S)) +
grid.arrange(SAR, PxAR, ExAR, nrow = 1)
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "ExAR") +
ylab(expression(E[x]==P[x] S)) +
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "ExAR") +
ylab(expression(E[x]==P[x], S)) +
theme_classic() +
theme(legend.position="none")
grid.arrange(SAR, PxAR, ExAR, nrow = 1)
dat <- SAD.prob.mass(1000, 100, cv_abund.vect = c(10))
A = 1:100
z1 = 0.2
z2 = 0.1
z3 = 0.3
exz = -0.1
c=3
S1 = c*A^z1
S2 = c*A^z2
S3 = c*A^z3
# CURVE 1 - shallow power law
Px = (c*A^exz)/max(c*A^exz)*0.5
Ex1 = S1*Px
Ex2 = S2*Px
Ex3 = S3*Px
dat <- data.frame(A = rep(A, times = 3),
S = c(S1, S2, S3),
Px = rep(Px, times = 3),
Ex = c(Ex1, Ex2, Ex3),
scenario = rep(c("i","ii","iii"), each = length(A)))
SAR <- ggplot(data = dat, aes(x = A, y = S)) +
geom_line(aes(linetype = scenario)) +
labs(title = "SAR") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()  +
theme(legend.position="none")
PxAR <- ggplot(data = data.frame(A, Px), aes(x = A, y = Px)) +
geom_line() +
scale_x_continuous(trans='log10') +
labs(title = "PxAR") +
theme_classic()  +
theme(legend.position="none")
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "ExAR") +
ylab(expression(E[x]==SxP[x])) +
theme_classic() +
theme(legend.position="none")
grid.arrange(SAR, PxAR, ExAR, nrow = 1)
A = 1:100
z1 = 0.2
z2 = 0.1
z3 = 0.3
exz = -0.1
c=3
S1 = c*A^z1
S2 = c*A^z2
S3 = c*A^z3
# CURVE 1 - shallow power law
Px = (c*A^exz)/max(c*A^exz)*0.5
Ex1 = S1*Px
Ex2 = S2*Px
Ex3 = S3*Px
dat <- data.frame(A = rep(A, times = 3),
S = c(S1, S2, S3),
Px = rep(Px, times = 3),
Ex = c(Ex1, Ex2, Ex3),
scenario = rep(c("i","ii","iii"), each = length(A)))
SAR <- ggplot(data = dat, aes(x = A, y = S)) +
geom_line(aes(linetype = scenario)) +
labs(title = "SAR") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()  +
theme(legend.position="none")
PxAR <- ggplot(data = data.frame(A, Px), aes(x = A, y = Px)) +
geom_line() +
scale_x_continuous(trans='log10') +
labs(title = "PxAR") +
theme_classic()  +
theme(legend.position="none")
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "ExAR") +
ylab(expression(E[x]==S%*%P[x])) +
theme_classic() +
theme(legend.position="none")
grid.arrange(SAR, PxAR, ExAR, nrow = 1)
A = 1:100
z1 = 0.15
z2 = 0.2
z3 = 0.25
exz = -0.1
c=3
S1 = c*A^z1
S2 = c*A^z2
S3 = c*A^z3
# CURVE 1 - shallow power law
Px = (c*A^exz)/max(c*A^exz)*0.5
Ex1 = S1*Px
Ex2 = S2*Px
Ex3 = S3*Px
dat <- data.frame(A = rep(A, times = 3),
S = c(S1, S2, S3),
Px = rep(Px, times = 3),
Ex = c(Ex1, Ex2, Ex3),
scenario = rep(c("i","ii","iii"), each = length(A)))
SAR <- ggplot(data = dat, aes(x = A, y = S)) +
geom_line(aes(linetype = scenario)) +
labs(title = "SAR") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()  +
theme(legend.position="none")
PxAR <- ggplot(data = data.frame(A, Px), aes(x = A, y = Px)) +
geom_line() +
scale_x_continuous(trans='log10') +
labs(title = "PxAR") +
theme_classic()  +
theme(legend.position="none")
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "ExAR") +
ylab(expression(E[x]==S%*%P[x])) +
theme_classic() +
theme(legend.position="none")
grid.arrange(SAR, PxAR, ExAR, nrow = 1)
A = 1:100
z1 = 0.05
z2 = 0.2
z3 = 0.25
exz = -0.1
c=3
S1 = c*A^z1
S2 = c*A^z2
S3 = c*A^z3
# CURVE 1 - shallow power law
Px = (c*A^exz)/max(c*A^exz)*0.5
Ex1 = S1*Px
Ex2 = S2*Px
Ex3 = S3*Px
dat <- data.frame(A = rep(A, times = 3),
S = c(S1, S2, S3),
Px = rep(Px, times = 3),
Ex = c(Ex1, Ex2, Ex3),
scenario = rep(c("i","ii","iii"), each = length(A)))
SAR <- ggplot(data = dat, aes(x = A, y = S)) +
geom_line(aes(linetype = scenario)) +
labs(title = "SAR") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()  +
theme(legend.position="none")
PxAR <- ggplot(data = data.frame(A, Px), aes(x = A, y = Px)) +
geom_line() +
scale_x_continuous(trans='log10') +
labs(title = "PxAR") +
theme_classic()  +
theme(legend.position="none")
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "ExAR") +
ylab(expression(E[x]==S%*%P[x])) +
theme_classic() +
theme(legend.position="none")
grid.arrange(SAR, PxAR, ExAR, nrow = 1)
A = 1:100
z1 = 0.05
z2 = 0.15
z3 = 0.25
exz = -0.1
c=3
S1 = c*A^z1
S2 = c*A^z2
S3 = c*A^z3
# CURVE 1 - shallow power law
Px = (c*A^exz)/max(c*A^exz)*0.5
Ex1 = S1*Px
Ex2 = S2*Px
Ex3 = S3*Px
dat <- data.frame(A = rep(A, times = 3),
S = c(S1, S2, S3),
Px = rep(Px, times = 3),
Ex = c(Ex1, Ex2, Ex3),
scenario = rep(c("i","ii","iii"), each = length(A)))
SAR <- ggplot(data = dat, aes(x = A, y = S)) +
geom_line(aes(linetype = scenario)) +
labs(title = "SAR") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()  +
theme(legend.position="none")
PxAR <- ggplot(data = data.frame(A, Px), aes(x = A, y = Px)) +
geom_line() +
scale_x_continuous(trans='log10') +
labs(title = "PxAR") +
theme_classic()  +
theme(legend.position="none")
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "ExAR") +
ylab(expression(E[x]==S%*%P[x])) +
theme_classic() +
theme(legend.position="none")
grid.arrange(SAR, PxAR, ExAR, nrow = 1)
A = 1:100
z1 = 0.05
z2 = 0.1
z3 = 0.25
exz = -0.1
c=3
S1 = c*A^z1
S2 = c*A^z2
S3 = c*A^z3
# CURVE 1 - shallow power law
Px = (c*A^exz)/max(c*A^exz)*0.5
Ex1 = S1*Px
Ex2 = S2*Px
Ex3 = S3*Px
dat <- data.frame(A = rep(A, times = 3),
S = c(S1, S2, S3),
Px = rep(Px, times = 3),
Ex = c(Ex1, Ex2, Ex3),
scenario = rep(c("i","ii","iii"), each = length(A)))
SAR <- ggplot(data = dat, aes(x = A, y = S)) +
geom_line(aes(linetype = scenario)) +
labs(title = "SAR") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()  +
theme(legend.position="none")
PxAR <- ggplot(data = data.frame(A, Px), aes(x = A, y = Px)) +
geom_line() +
scale_x_continuous(trans='log10') +
labs(title = "PxAR") +
theme_classic()  +
theme(legend.position="none")
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "ExAR") +
ylab(expression(E[x]==S%*%P[x])) +
theme_classic() +
theme(legend.position="none")
grid.arrange(SAR, PxAR, ExAR, nrow = 1)
pdf("Figure_SAR.pdf", width=8, height=2.7)
grid.arrange(SAR, PxAR, ExAR, nrow = 1)
A = 1:100
z1 = 0.05
z2 = 0.1
z3 = 0.25
exz = -0.1
c=3
S1 = c*A^z1
S2 = c*A^z2
S3 = c*A^z3
# CURVE 1 - shallow power law
Px = (c*A^exz)/max(c*A^exz)*0.5
Ex1 = S1*Px
Ex2 = S2*Px
Ex3 = S3*Px
dat <- data.frame(A = rep(A, times = 3),
S = c(S1, S2, S3),
Px = rep(Px, times = 3),
Ex = c(Ex1, Ex2, Ex3),
scenario = rep(c("i","ii","iii"), each = length(A)))
SAR <- ggplot(data = dat, aes(x = A, y = S)) +
geom_line(aes(linetype = scenario)) +
labs(title = "SAR") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()  +
theme(legend.position="none")
PxAR <- ggplot(data = data.frame(A, Px), aes(x = A, y = Px)) +
geom_line() +
scale_x_continuous(trans='log10') +
labs(title = "PxAR") +
theme_classic()  +
theme(legend.position="none")
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "ExAR") +
ylab(expression(E[x]==S%*%P[x])) +
theme_classic() +
theme(legend.position="none")
pdf("Figure_SAR.pdf", width=8, height=2.7)
A = 1:100
z1 = 0.05
z2 = 0.1
z3 = 0.25
exz = -0.1
c=3
S1 = c*A^z1
S2 = c*A^z2
S3 = c*A^z3
# CURVE 1 - shallow power law
Px = (c*A^exz)/max(c*A^exz)*0.5
Ex1 = S1*Px
Ex2 = S2*Px
Ex3 = S3*Px
dat <- data.frame(A = rep(A, times = 3),
S = c(S1, S2, S3),
Px = rep(Px, times = 3),
Ex = c(Ex1, Ex2, Ex3),
scenario = rep(c("i","ii","iii"), each = length(A)))
SAR <- ggplot(data = dat, aes(x = A, y = S)) +
geom_line(aes(linetype = scenario)) +
labs(title = "SAR") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()  +
theme(legend.position="none")
PxAR <- ggplot(data = data.frame(A, Px), aes(x = A, y = Px)) +
geom_line() +
scale_x_continuous(trans='log10') +
labs(title = "PxAR") +
theme_classic()  +
theme(legend.position="none")
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "ExAR") +
ylab(expression(E[x]==S%*%P[x])) +
theme_classic() +
theme(legend.position="none")
pdf("Figure_SAR.pdf", width=8, height=2.7)
grid.arrange(SAR, PxAR, ExAR, nrow = 1)
dev.off()
A = 1:100
z1 = 0.05
z2 = 0.1
z3 = 0.25
exz = -0.1
c=3
S1 = c*A^z1
S2 = c*A^z2
S3 = c*A^z3
# CURVE 1 - shallow power law
Px = (c*A^exz)/max(c*A^exz)*0.5
Ex1 = S1*Px
Ex2 = S2*Px
Ex3 = S3*Px
dat <- data.frame(A = rep(A, times = 3),
S = c(S1, S2, S3),
Px = rep(Px, times = 3),
Ex = c(Ex1, Ex2, Ex3),
scenario = rep(c("i","ii","iii"), each = length(A)))
SAR <- ggplot(data = dat, aes(x = A, y = S)) +
geom_line(aes(linetype = scenario)) +
labs(title = "SAR") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()  +
theme(legend.position="none")
PxAR <- ggplot(data = data.frame(A, Px), aes(x = A, y = Px)) +
geom_line() +
scale_x_continuous(trans='log10') +
labs(title = "PxAR") +
theme_classic()  +
theme(legend.position="none")
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "ExAR") +
ylab(expression(E[x]==S%*%P[x])) +
theme_classic() +
theme(legend.position="none")
pdf("Figure_SAR.pdf", width=8, height=2.3)
grid.arrange(SAR, PxAR, ExAR, nrow = 1)
dev.off()
A = 1:100
z1 = 0.05
z2 = 0.1
z3 = 0.25
exz = -0.1
c=3
S1 = c*A^z1
S2 = c*A^z2
S3 = c*A^z3
# CURVE 1 - shallow power law
Px = (c*A^exz)/max(c*A^exz)*0.5
Ex1 = S1*Px
Ex2 = S2*Px
Ex3 = S3*Px
dat <- data.frame(A = rep(A, times = 3),
S = c(S1, S2, S3),
Px = rep(Px, times = 3),
Ex = c(Ex1, Ex2, Ex3),
scenario = rep(c("i","ii","iii"), each = length(A)))
SAR <- ggplot(data = dat, aes(x = A, y = S)) +
geom_line(aes(linetype = scenario)) +
labs(title = "SAR") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()  +
theme(legend.position="none")
PxAR <- ggplot(data = data.frame(A, Px), aes(x = A, y = Px)) +
geom_line() +
scale_x_continuous(trans='log10') +
labs(title = "PxAR") +
theme_classic()  +
theme(legend.position="none")
ExAR <- ggplot(data = dat, aes(x = A, y = Ex)) +
geom_line(aes(linetype = scenario)) +
scale_x_continuous(trans='log10') +
labs(title = "ExAR") +
ylab(expression(E[x]==S%*%P[x])) +
theme_classic() +
theme(legend.position="none")
pdf("Figure_SAR.pdf", width=6, height=2.3)
grid.arrange(SAR, PxAR, ExAR, nrow = 1)
dev.off()
