com <- sim_thomas_community(n_sim  = N,
s_pool = S,
sad_coef = list(cv_abund = cv.abund),
mother_points = 1,
sigma  = sigma)
# Species-Abundance Distribution - SAD
SAD <- data.frame(table(com$census$species))
names(SAD) <- c("species", "N.tot")
SAD$species <- as.character(SAD$species)
census <- left_join(com$census, SAD, by="species")
# re-scale P.minus
P.minus.vect <- effect.f(alpha, beta, N = census$N.tot, plot = FALSE)
# sample individuals that will be killed
deaths <- rbinom(n = length(P.minus.vect), size = 1, prob = P.minus.vect)
dead.coords <- com$census[deaths == 1, ]
ef <- effect.f(alpha, beta, plot = TRUE)
deltas <- com.extinction(com,
side.divisions,
alpha = alpha,
beta = beta,
plot.res = TRUE)
figs <- list()
grains <- c(16,8,4,2)
my.labs <- c("(c)"," ", " ", " ")
for(i in 1:length(grains))
{
figs[[i]] <-  ggplot(data = com$census, aes(x = x, y = y)) +
geom_point(aes(colour = species)) +
geom_point(data = dead.coords, shape = 4, size = 2.5) +
theme_minimal() +
coord_fixed(ratio = 1) +
scale_x_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
scale_y_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
theme(axis.text.x=element_blank(),
legend.position = "none",
axis.text.y=element_blank(),
panel.grid.major = element_line(color = "darkgrey"),
panel.grid.minor = element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank()) +
labs(title= my.labs[i])
}
grid.arrange(figs[[1]], figs[[2]], figs[[3]], figs[[4]], nrow = 1)
ExAR<- ggplot(data = deltas, aes(x = A, y = E)) +
geom_point() +
scale_x_continuous(trans='log10') +
geom_smooth(method = lm, se = FALSE, colour = "black", size = 0.5) +
ylim(c(0,1.5)) +
theme_classic() +
xlab("Area") +
ylab("E") +
labs(title= "(d)")
ExAR
deltas
ExAR<- ggplot(data = deltas, aes(x = A, y = E.x)) +
geom_point() +
scale_x_continuous(trans='log10') +
geom_smooth(method = lm, se = FALSE, colour = "black", size = 0.5) +
ylim(c(0,1.5)) +
theme_classic() +
xlab("Area") +
ylab("E") +
labs(title= "(d)")
PxAR <- ggplot(data = deltas, aes(x = A, y = P.x)) +
geom_point() +
scale_x_continuous(trans='log10') +
geom_smooth(method = lm, se = FALSE, colour = "black", size = 0.5) +
ylim(c(0,1)) +
theme_classic() +
xlab("Area") +
ylab("Px") +
labs(title= "(e)")
PxAR
ExAR
lay.mat <- matrix(c(1,1,2,2,
3,4,5,6,
7,7,8,8),
nrow = 3, ncol=4, byrow=TRUE)
grid.arrange(SAD10, eff1.plot,
figs[[1]], figs[[2]], figs[[3]], figs[[4]],
ExAR, PxAR, layout_matrix = lay.mat)
grid.arrange(SAD10, eff1.plot,
figs[[1]], figs[[2]], figs[[3]], figs[[4]],
ExAR, PxAR, layout_matrix = lay.mat)
com <- sim_thomas_community(n_sim  = N,
s_pool = S,
sad_coef = list(cv_abund = cv.abund),
mother_points = 1,
sigma  = sigma)
grid.arrange(figs[[1]], figs[[2]], figs[[3]], figs[[4]], nrow = 1)
ggplot(data = com$census, aes(x = x, y = y)) +
geom_point(aes(colour = species))
ggplot(data = com$census, aes(x = x, y = y)) +
geom_point(aes(colour = species)) +
theme_minimal() +
coord_fixed(ratio = 1) +
scale_x_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
scale_y_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
theme(axis.text.x=element_blank(),
legend.position = "none",
axis.text.y=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank()) +
labs(title= my.labs[i])
ggplot(data = com$census, aes(x = x, y = y)) +
geom_point(aes(colour = species)) +
theme_minimal() +
coord_fixed(ratio = 1) +
scale_x_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
scale_y_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
theme(axis.text.x=element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank()) +
labs(title= my.labs[i])
ggplot(data = com$census, aes(x = x, y = y)) +
geom_point(aes(colour = species)) +
theme_minimal() +
geom_point(data = dead.coords, shape = 4, size = 2.5) +
coord_fixed(ratio = 1) +
scale_x_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
scale_y_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
theme(axis.text.x=element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank()) +
labs(title= my.labs[i])
ggplot(data = com$census, aes(x = x, y = y)) +
geom_point(aes(colour = species)) +
theme_minimal() +
geom_point(data = dead.coords, shape = 4, size = 2.5) +
coord_fixed(ratio = 1) +
scale_x_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
scale_y_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
theme(axis.text.x=element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank()) +
labs(title= my.labs[i])
# ------------------------------------------------------------------------------
# plot just the points
ggplot(data = com$census, aes(x = x, y = y)) +
geom_point(aes(colour = species)) +
theme_minimal() +
#geom_point(data = dead.coords, shape = 4, size = 2.5) +
coord_fixed(ratio = 1) +
scale_x_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
scale_y_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
theme(axis.text.x=element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank()) +
labs(title= my.labs[i])
ggplot(data = com$census, aes(x = x, y = y)) +
geom_point(aes(colour = species)) +
theme_minimal() +
geom_point(data = dead.coords, shape = 4, size = 2.5) +
coord_fixed(ratio = 1) +
scale_x_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
scale_y_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
theme(axis.text.x=element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank()) +
labs(title= my.labs[i])
grid.arrange(figs[[1]], figs[[2]], figs[[3]], figs[[4]], nrow = 1)
dat <- SAD.prob.mass(1000, 100, cv_abund.vect = c(10))
SAD10 <- ggplot(data = dat, aes(x=N, y = PM)) +
geom_point() +
geom_line() +
theme_classic() +
ylim(0, 0.2) + ylab("Probablity mass") +
xlab("Species abundance (# of individuals)") +
labs(title= "(a)")
SAD10
N = 100
S = 10
cv.abund = 1
sigma = 0.1
alpha = 0.1
beta = 1
side.divisions = c(2,4,8,16)
set.seed(1234)
eff1 <- data.frame(N = seq(1,40),
P.death = effect.f(alpha, beta, N = seq(1,40), plot=FALSE))
eff1.plot <- ggplot(data = eff1, aes(x = N, y = P.death)) +
geom_point() +
geom_line() +
ylim(0,1) +
ylab(expression(P[death])) +
theme_classic() +
xlab("Species abundance (# of individuals)") +
labs(title= "(b)")
com <- sim_thomas_community(n_sim  = N,
s_pool = S,
sad_coef = list(cv_abund = cv.abund),
mother_points = 1,
sigma  = sigma)
# Species-Abundance Distribution - SAD
SAD <- data.frame(table(com$census$species))
names(SAD) <- c("species", "N.tot")
SAD$species <- as.character(SAD$species)
census <- left_join(com$census, SAD, by="species")
# re-scale P.minus
P.minus.vect <- effect.f(alpha, beta, N = census$N.tot, plot = FALSE)
# sample individuals that will be killed
deaths <- rbinom(n = length(P.minus.vect), size = 1, prob = P.minus.vect)
dead.coords <- com$census[deaths == 1, ]
ef <- effect.f(alpha, beta, plot = TRUE)
deltas <- com.extinction(com,
side.divisions,
alpha = alpha,
beta = beta,
plot.res = TRUE)
# ------------------------------------------------------------------------------
# plot just the points
ggplot(data = com$census, aes(x = x, y = y)) +
geom_point(aes(colour = species)) +
theme_minimal() +
geom_point(data = dead.coords, shape = 4, size = 2.5) +
coord_fixed(ratio = 1) +
scale_x_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
scale_y_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
theme(axis.text.x=element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank()) +
labs(title= my.labs[i])
grid.arrange(figs[[1]], figs[[2]], figs[[3]], figs[[4]], nrow = 1)
N = 100
S = 10
cv.abund = 1
sigma = 0.1
alpha = 0.1
beta = -1
side.divisions = c(2,4,8,16)
set.seed(1234)
eff1 <- data.frame(N = seq(1,40),
P.death = effect.f(alpha, beta, N = seq(1,40), plot=FALSE))
eff1.plot <- ggplot(data = eff1, aes(x = N, y = P.death)) +
geom_point() +
geom_line() +
ylim(0,1) +
ylab(expression(P[death])) +
theme_classic() +
xlab("Species abundance (# of individuals)") +
labs(title= "(b)")
com <- sim_thomas_community(n_sim  = N,
s_pool = S,
sad_coef = list(cv_abund = cv.abund),
mother_points = 1,
sigma  = sigma)
# Species-Abundance Distribution - SAD
SAD <- data.frame(table(com$census$species))
names(SAD) <- c("species", "N.tot")
SAD$species <- as.character(SAD$species)
census <- left_join(com$census, SAD, by="species")
# re-scale P.minus
P.minus.vect <- effect.f(alpha, beta, N = census$N.tot, plot = FALSE)
# sample individuals that will be killed
deaths <- rbinom(n = length(P.minus.vect), size = 1, prob = P.minus.vect)
dead.coords <- com$census[deaths == 1, ]
ef <- effect.f(alpha, beta, plot = TRUE)
deltas <- com.extinction(com,
side.divisions,
alpha = alpha,
beta = beta,
plot.res = TRUE)
ggplot(data = com$census, aes(x = x, y = y)) +
geom_point(aes(colour = species)) +
theme_minimal() +
geom_point(data = dead.coords, shape = 4, size = 2.5) +
coord_fixed(ratio = 1) +
scale_x_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
scale_y_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
theme(axis.text.x=element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank()) +
labs(title= my.labs[i])
dat <- SAD.prob.mass(1000, 100, cv_abund.vect = c(10))
SAD10 <- ggplot(data = dat, aes(x=N, y = PM)) +
geom_point() +
geom_line() +
theme_classic() +
ylim(0, 0.2) + ylab("Probablity mass") +
xlab("Species abundance (# of individuals)") +
labs(title= "(a)")
SAD10
N = 100
S = 10
cv.abund = 1
sigma = 0.1
alpha = 0.1
beta = -1
side.divisions = c(2,4,8,16)
set.seed(1234)
eff1 <- data.frame(N = seq(1,40),
P.death = effect.f(alpha, beta, N = seq(1,40), plot=FALSE))
eff1.plot <- ggplot(data = eff1, aes(x = N, y = P.death)) +
geom_point() +
geom_line() +
ylim(0,1) +
ylab(expression(P[death])) +
theme_classic() +
xlab("Species abundance (# of individuals)") +
labs(title= "(b)")
com <- sim_thomas_community(n_sim  = N,
s_pool = S,
sad_coef = list(cv_abund = cv.abund),
mother_points = 1,
sigma  = sigma)
# Species-Abundance Distribution - SAD
SAD <- data.frame(table(com$census$species))
names(SAD) <- c("species", "N.tot")
SAD$species <- as.character(SAD$species)
census <- left_join(com$census, SAD, by="species")
# re-scale P.minus
P.minus.vect <- effect.f(alpha, beta, N = census$N.tot, plot = FALSE)
# sample individuals that will be killed
deaths <- rbinom(n = length(P.minus.vect), size = 1, prob = P.minus.vect)
dead.coords <- com$census[deaths == 1, ]
ef <- effect.f(alpha, beta, plot = TRUE)
deltas <- com.extinction(com,
side.divisions,
alpha = alpha,
beta = beta,
plot.res = TRUE)
# ------------------------------------------------------------------------------
# plot just the points
ggplot(data = com$census, aes(x = x, y = y)) +
geom_point(aes(colour = species)) +
theme_minimal() +
geom_point(data = dead.coords, shape = 4, size = 2.5) +
coord_fixed(ratio = 1) +
scale_x_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
scale_y_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
theme(axis.text.x=element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank()) +
labs(title= my.labs[i])
N = 100
S = 10
cv.abund = 1
sigma = 0.1
alpha = 0.9
beta = -1
side.divisions = c(2,4,8,16)
set.seed(1234)
eff1 <- data.frame(N = seq(1,40),
P.death = effect.f(alpha, beta, N = seq(1,40), plot=FALSE))
eff1.plot <- ggplot(data = eff1, aes(x = N, y = P.death)) +
geom_point() +
geom_line() +
ylim(0,1) +
ylab(expression(P[death])) +
theme_classic() +
xlab("Species abundance (# of individuals)") +
labs(title= "(b)")
com <- sim_thomas_community(n_sim  = N,
s_pool = S,
sad_coef = list(cv_abund = cv.abund),
mother_points = 1,
sigma  = sigma)
# Species-Abundance Distribution - SAD
SAD <- data.frame(table(com$census$species))
names(SAD) <- c("species", "N.tot")
SAD$species <- as.character(SAD$species)
census <- left_join(com$census, SAD, by="species")
# re-scale P.minus
P.minus.vect <- effect.f(alpha, beta, N = census$N.tot, plot = FALSE)
# sample individuals that will be killed
deaths <- rbinom(n = length(P.minus.vect), size = 1, prob = P.minus.vect)
dead.coords <- com$census[deaths == 1, ]
ef <- effect.f(alpha, beta, plot = TRUE)
deltas <- com.extinction(com,
side.divisions,
alpha = alpha,
beta = beta,
plot.res = TRUE)
ggplot(data = com$census, aes(x = x, y = y)) +
geom_point(aes(colour = species)) +
theme_minimal() +
geom_point(data = dead.coords, shape = 4, size = 2.5) +
coord_fixed(ratio = 1) +
scale_x_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
scale_y_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
theme(axis.text.x=element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank()) +
labs(title= my.labs[i])
ggplot(data = com$census, aes(x = x, y = y)) +
geom_point(aes(colour = species)) +
theme_minimal() +
#geom_point(data = dead.coords, shape = 4, size = 2.5) +
coord_fixed(ratio = 1) +
scale_x_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
scale_y_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
theme(axis.text.x=element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank()) +
labs(title= my.labs[i])
ggplot(data = com$census, aes(x = x, y = y)) +
geom_point(aes(colour = species)) +
theme_minimal() +
geom_point(data = dead.coords, shape = 4, size = 2.5) +
coord_fixed(ratio = 1) +
scale_x_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
scale_y_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
theme(axis.text.x=element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank()) +
labs(title= my.labs[i])
ggplot(data = com$census, aes(x = x, y = y)) +
geom_point(aes(colour = species)) +
theme_minimal() +
#geom_point(data = dead.coords, shape = 4, size = 2.5) +
coord_fixed(ratio = 1) +
scale_x_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
scale_y_continuous(breaks = seq(0, 1, by = 1/grains[i])) +
theme(axis.text.x=element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank()) +
labs(title= my.labs[i])
library(mobsim) # simulating point pattern communities
library(manipulate) # sliders and interactive plotting
library(randomForest) # random forest
# graphics
library(tidyverse)
library(ggbreak)
res <- read.csv("sim_results.csv")
slope.vs.beta.E <- ggplot(data = res, aes(x = as.factor(beta), y = slope.E)) +
#geom_vline(xintercept=as.factor(0), linetype = "dashed", colour = "grey") +
geom_abline(intercept=0, slope = 0, linetype = "dashed", colour = "grey") +
geom_boxplot(aes(fill = type), outlier.colour = "grey", outlier.shape = 1) +
facet_grid(.~as.factor(cv.abund)) +
theme_classic() +
ylim(c(-1.2,1.2)) +
labs(title="(b)") +
xlab(expression(beta)) +
ylab("ExAR slope") +
theme(legend.position = "none")
slope.vs.beta.E
slope.vs.beta.P <- ggplot(data = res, aes(x = as.factor(beta), y = slope.P)) +
#geom_vline(xintercept=as.factor(0), linetype = "dashed", colour = "grey") +
geom_abline(intercept=0, slope = 0, linetype = "dashed", colour = "grey") +
geom_boxplot(aes(fill = type), outlier.colour = "grey", outlier.shape = 1) +
facet_grid(.~as.factor(cv.abund)) +
theme_classic() +
xlab(expression(beta)) +
ylab("PxAR slope") +
labs(title="(a)") +
theme(legend.position = c(0.1, 0.8))
slope.vs.beta.P
slope.simple <- ggplot(data = res, aes(x = as.factor(beta), y = slope.P)) +
#geom_vline(xintercept=as.factor(0), linetype = "dashed", colour = "grey") +
geom_abline(intercept=0, slope = 0, linetype = "dashed", colour = "grey") +
geom_boxplot(aes(fill = type), outlier.colour = "grey", outlier.shape = 1) +
#facet_grid(.~as.factor(cv.abund)) +
theme_classic() +
xlab(expression(beta)) +
ylab("PxAR slope") +
labs(title="(a)") +
theme(legend.position = c(0.1, 0.8))
slope.simple
slope.simple <- ggplot(data = res, aes(x = as.factor(beta), y = slope.P)) +
#geom_vline(xintercept=as.factor(0), linetype = "dashed", colour = "grey") +
geom_abline(intercept=0, slope = 0, linetype = "dashed", colour = "grey") +
geom_boxplot(aes(fill = type), outlier.colour = "grey", outlier.shape = 1) +
#facet_grid(.~as.factor(cv.abund)) +
theme_classic() +
xlab(expression(beta)) +
ylab("PxAR slope") +
theme(legend.position = c(0.1, 0.8))
slope.simple
slope.simple <- ggplot(data = res, aes(x = as.factor(beta), y = slope.P)) +
#geom_vline(xintercept=as.factor(0), linetype = "dashed", colour = "grey") +
geom_abline(intercept=0, slope = 0, linetype = "dashed", colour = "grey") +
geom_boxplot(aes(fill = type), outlier.colour = "grey", outlier.shape = 1) +
#facet_grid(.~as.factor(cv.abund)) +
theme_classic() +
xlab(expression(beta)) +
ylab("PxAR slope") +
theme(legend.position = c(0.8, 0.8))
slope.simple
