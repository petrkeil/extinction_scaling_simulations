library(mobsim) # simulating point pattern communities
library(manipulate) # sliders and interactive plotting
library(randomForest) # random forest
# graphics
library(tidyverse)
library(ggbreak)
library(gridExtra) # multiple ggplots in a figure
library(latex2exp) # for math symbols in figures
# parallel computation
library(foreach)
library(doParallel)
# our own functions
source("extinctions_functions.r")
# setting the random seed
set.seed(12345)
dat <- SAD.prob.mass(1000, 100)
SADs <- ggplot(data = dat, aes(x=N, y = PM)) +
geom_point() +
geom_line() +
theme_classic() +
ylim(0, 0.4) + ylab("Probablity mass") +
xlab("N") +
labs(title="(a)") +
facet_grid(.~cv_abund)
SADs
dat <- SAD.prob.mass(1000, 100)
SADs <- ggplot(data = dat, aes(x=N, y = PM)) +
geom_point() +
geom_line() +
theme_classic() +
ylim(0, 0.4) + ylab("Probablity mass") +
xlab("N") +
labs(title="(c)") +
facet_grid(.~cv_abund)
SADs
res <- read.csv("sim_results.csv")
slope.vs.beta.E <- ggplot(data = res, aes(x = as.factor(beta), y = slope.E)) +
#geom_vline(xintercept=as.factor(0), linetype = "dashed", colour = "grey") +
geom_abline(intercept=0, slope = 0, linetype = "dashed", colour = "grey") +
geom_boxplot(aes(fill = type), outlier.colour = "grey", outlier.shape = 1) +
facet_grid(.~as.factor(cv.abund)) +
theme_classic() +
ylim(c(-1.2,1.2)) +
labs(title="(b)") +
xlab(expression(beta)) +
ylab("ExAR slope") +
theme(legend.position = "none")
slope.vs.beta.E
slope.vs.beta.P <- ggplot(data = res, aes(x = as.factor(beta), y = slope.P)) +
#geom_vline(xintercept=as.factor(0), linetype = "dashed", colour = "grey") +
geom_abline(intercept=0, slope = 0, linetype = "dashed", colour = "grey") +
geom_boxplot(aes(fill = type), outlier.colour = "grey", outlier.shape = 1) +
facet_grid(.~as.factor(cv.abund)) +
theme_classic() +
xlab(expression(beta)) +
ylab("PxAR slope") +
labs(title="(a)") +
theme(legend.position = c(0.1, 0.8))
slope.vs.beta.P
grid.arrange(SADs, slope.vs.beta.E, slope.vs.beta.P , nrow = 3, heights=c(0.4, 0.7, 0.7))
## Export figure for the paper
pdf("Figure_beta_vs_scaling.pdf", width = 8, height=11)
grid.arrange( slope.vs.beta.P, slope.vs.beta.E, SADs, nrow = 3, heights=c(0.7, 0.7, 0.4))
dev.off()
